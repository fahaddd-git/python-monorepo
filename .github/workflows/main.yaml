name: Fahad's CI
run-name: Name for the workflow generated
on: [pull_request]
jobs:

      #----------------------------------------------
      #       check-out repo and set-up python
      # https://github.com/dorny/paths-filter#examples
      #----------------------------------------------
  detect_changes_job:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      lib_one_changed_bool: ${{ steps.services_filter.outputs.lib-one }}
      services_changed_arr: ${{steps.services_filter.outputs.changes}} # arr of libs (services) changed
      frontend_changed_bool: ${{ steps.frontend_filter.outputs.frontend }}

    steps:
      # services filter
      - uses: dorny/paths-filter@v2
        id: services_filter
        with:
          filters: |
            lib-one: 
              - 'sample_1/libs/lib-one/**'
            logger:
              - 'sample_1/libs/logger/**'

      # frontend filter
      - uses: dorny/paths-filter@v2
        id: frontend_filter
        with:
          filters: |
            frontend: 
              - 'frontend/**' 
      - run: echo "${{steps.frontend_filter.outputs}}"

      #----------------------------------------------
      #       Run matrix of jobs based on services changed
      # https://github.com/snok/install-poetry/blob/main/README.md
      # https://github.com/marketplace/actions/install-poetry-action#testing-using-a-matrix
      #----------------------------------------------
  run_ci_on_service:
    needs: detect_changes_job # detect_changes_job result
    if: needs.detect_changes_job.outputs.services_changed_arr != '[]' # [etl-service, neural-network, ...]
    strategy:
      matrix:
        services_to_test: ${{ fromJSON(needs.detect_changes_job.outputs.services_changed_arr) }} # parse
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      #----------------------------------------------
      #       load in the cached venv if it exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        env:
          LOCKFILE_LOCATION: '**/${{matrix.services_to_test}}/poetry.lock' # workaround for using variable in the hashFiles function below
        with:
          path: ./sample_1/libs/${{matrix.services_to_test}}/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles(env.LOCKFILE_LOCATION) }}
      #----------------------------------------------
      #       load cached local https://www.peterbe.com/plog/install-python-poetry-github-actions-faster
      #----------------------------------------------
      - name: Load cached .local
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/main.yaml') }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        working-directory: ./sample_1/libs/${{matrix.services_to_test}} # change dir
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
  run_ci_on_frontend:
    needs: detect_changes_job # detect_changes_job result
    if: needs.detect_changes_job.outputs.frontend_changed_bool == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: |
          cd frontend
          npm test
